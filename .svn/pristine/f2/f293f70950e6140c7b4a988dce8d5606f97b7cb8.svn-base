package com.empass.sdk.activity;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.WindowManager;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;

import com.empass.sdk.R;
import com.empass.sdk.adapter.ViewPagerGetStartedAdapter;
import com.empass.sdk.main.EmpassActivity;
import com.empass.sdk.utils.LogUtils;


/**
 * Class for App introduction using View Pager with description
 *
 * @author Sandeep
 */
@SuppressWarnings("ALL")
public class GuideActivity extends EmpassActivity implements OnPageChangeListener {
    /**
     * Declaer variable
     */
    private static ViewPagerGetStartedAdapter adapter;
    /**
     * Declaer variable
     */
    public transient LinearLayout llDots;
    /**
     * Declaer variable
     */
    public transient ViewPager vpGetStarted;
    /**
     * Declaer varable
     */
    public transient Intent intent;

    /**
     * Class constructor
     **/
    public GuideActivity() {
        super();
    }

    /**
     * initilize ui content
     */
    @Override
    protected void onCreate(final Bundle bundle) {
        setContentView(R.layout.m_activity_guide);
        super.onCreate(bundle);
        try {
            context = GuideActivity.this;
            llDots = (LinearLayout) findViewById(R.id.llDots);
            vpGetStarted = (ViewPager) findViewById(R.id.viewPagerGetStarted);
            final WindowManager.LayoutParams layoutParams = getWindow().getAttributes();
            layoutParams.screenBrightness = 0.3f;
            getWindow().setAttributes(layoutParams);
            adapter = new ViewPagerGetStartedAdapter(this);
            intent = getIntent();
            vpGetStarted.setAdapter(adapter);
            vpGetStarted.setCurrentItem(0);
            final LayoutParams params = new LayoutParams(35, 30);
            // show dot image
            for (int i = 0; i < adapter.getCount(); i++) {
                final ImageButton imgDot = getImage();
                imgDot.setTag(i);
                imgDot.setImageResource(R.drawable.dot_white);
                imgDot.setBackgroundResource(0);
                imgDot.setPadding(5, 5, 5, 5);
                imgDot.setLayoutParams(params);
                if (i == 0) {
                    imgDot.setColorFilter(getResources().getColor(R.color.sdk_seconderycolor));
                }
                llDots.addView(imgDot);
            }
            vpGetStarted.setOnPageChangeListener(this);

        } catch (NullPointerException e) {
            LogUtils.error(sdkConstant.TAG, "Exception", e);
        } catch (OutOfMemoryError e) {
            final Intent intent1 = new Intent(GuideActivity.this, GoalDetailsActivity.class);
            intent1.putExtra(sdkConstant.GOAL_INTENT, intent.getExtras().getString(sdkConstant.GOAL_INTENT));
            startActivity(intent1);
            finish();
        } catch (Exception e) {
            LogUtils.error(sdkConstant.TAG, "Exception", e);
        }
    }

    private ImageButton getImage() {
        return new ImageButton(this);
    }

    /**
     * page change
     */
    @Override
    public void onPageScrollStateChanged(final int pos) {
        //noting action here
    }

    /**
     * page scroll
     */
    @Override
    public void onPageScrolled(final int index, final float index1, final int index2) {
        //noting action here
    }


    /**
     * swipe page
     */
    @Override
    public void onPageSelected(final int pos) {
        try {
            for (int i = 0; i < adapter.getCount(); i++) {
                if (i != pos) {
                    final ImageView imageView = (ImageView) llDots.findViewWithTag(i);
                    imageView.setColorFilter(getResources().getColor(R.color.m_light_gray2));
                }
            }
            final ImageView imageView = ((ImageView) llDots.findViewWithTag(pos));
            imageView.setColorFilter(getResources().getColor(R.color.sdk_seconderycolor));
            imageView.setSelected(true);
        } catch (Exception e) {
            LogUtils.error(sdkConstant.TAG, "Exception", e);
        }
    }

    @Override
    public void onBackPressed() {
        try {
            try {
                final Intent intent1 = new Intent(GuideActivity.this, GoalDetailsActivity.class);
                intent1.putExtra(sdkConstant.GOAL_INTENT, intent.getExtras().getString(sdkConstant.GOAL_INTENT));
                startActivity(intent1);
                finish();
            } catch (Exception e) {
                LogUtils.error(sdkConstant.TAG, "Exception", e);
            }
        } catch (Exception e) {
            LogUtils.error(sdkConstant.TAG, "Exception", e);
        }
    }

}
