package com.empass.sdk.adapter;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.graphics.Color;
import android.graphics.drawable.GradientDrawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.empass.sdk.R;
import com.empass.sdk.utils.LogUtils;
import com.empass.sdk.utils.SDKCommonUtils;
import com.empass.sdk.utils.SDKConstant;
import com.empass.sdk.vo.LeaderVO;

import java.util.ArrayList;

;


/**
 * Adapter for leaderboard activity list
 *
 * @author Sandeep
 */
@SuppressWarnings("ALL")
public class LeaderboardAdapter extends ArrayAdapter<LeaderVO> {
    /**
     * Context for adapter
     */
    private transient final Context context;
    /**
     *
     */
    private transient final String playerName;

    /**
     */
    private transient final String playerId;

    /**
     * Constructor for adapter
     *
     * @param context
     * @param txt
     * @param list
     * @param playerName
     */
    public LeaderboardAdapter(final Context context, final int txt, final ArrayList<LeaderVO> list, final String playerName,
                              final String playerId) {
        super(context, txt, list);
        this.context = context;
        this.playerName = playerName;
        this.playerId = playerId;

    }

    @SuppressLint("InflateParams")
    /**
     * list
     */
    @Override
    public View getView(final int position, View convertView, final ViewGroup parent) {
        try {
            LogUtils.debug(SDKConstant.TAG, String.valueOf(position));
            final LeaderVO data = getItem(position);
            final LayoutInflater inflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
            final ViewHolder viewHolder;
            if (convertView != null) {
                viewHolder = (ViewHolder) convertView.getTag();
            } else {
                convertView = inflater.inflate(R.layout.m_list_row_item_leaderboard, parent, false);
                viewHolder = new ViewHolder();
                viewHolder.tvRank = (TextView) convertView.findViewById(R.id.tvRankLeaderboard);
                viewHolder.tvPlayer = (TextView) convertView.findViewById(R.id.tvNameLeaderboard);
                viewHolder.tvPlayerAvg = (TextView) convertView.findViewById(R.id.tvPointsLeaderboard);
                viewHolder.imageView = (ImageView) convertView.findViewById(R.id.ibUserImageSlider);
                convertView.setTag(viewHolder);
            }
            if (SDKConstant.DEMO_TXT.equalsIgnoreCase(data.getPlayerId()) && SDKConstant.DEMO_TXT.equalsIgnoreCase(data.getPlayerName())) {
                final GradientDrawable drawable = (GradientDrawable) viewHolder.imageView.getDrawable();
                viewHolder.tvPlayerAvg.setText("");
                viewHolder.imageView.setVisibility(View.INVISIBLE);
                viewHolder.tvRank.setText("");
                viewHolder.tvPlayer.setText("");
                drawable.setColor(context.getResources().getColor(R.color.m_color4));
                convertView.setBackgroundColor(context.getResources().getColor(R.color.m_color4));
            } else {
                final GradientDrawable drawable = (GradientDrawable) viewHolder.imageView.getDrawable();
                viewHolder.imageView.setVisibility(View.VISIBLE);
                viewHolder.tvPlayerAvg.setTextColor(Color.parseColor(SDKCommonUtils.getColorCodeWithDarkOpacity(data.getDomainColor())));
                viewHolder.tvRank.setTextColor(Color.WHITE);
                viewHolder.tvPlayer.setTextColor(Color.parseColor(SDKCommonUtils.getColorCodeWithDarkOpacity(data.getDomainColor())));
                drawable.setColor(context.getResources().getColor(R.color.sdk_seconderycolor));
                if (data.getPlayerName().equalsIgnoreCase(playerName) && data.getPlayerId().equals(playerId)) {
                    viewHolder.tvPlayer.setTextColor(context.getResources().getColor(R.color.m_white));
                    viewHolder.tvPlayerAvg.setTextColor(context.getResources().getColor(R.color.m_white));
                    viewHolder.tvRank.setTextColor(context.getResources().getColor(R.color.m_white));
                    drawable.setColor(context.getResources().getColor(R.color.sdk_primarycolor));
                }
                //set player rank
                viewHolder.tvRank.setText(String.valueOf(data.getRank()));
                //set flag
                //set player name
                viewHolder.tvPlayer.setText(String.valueOf(data.getPlayerName()));
                //set average score
                viewHolder.tvPlayerAvg.setText(data.getAvgScore());
                convertView.setBackgroundColor(context.getResources().getColor(R.color.m_white));
                if (SDKConstant.DEMO_TXT.equalsIgnoreCase(data.getPlayerId()) && SDKConstant.DEMO_TXT.equalsIgnoreCase(data.getPlayerName())) {
                    convertView.setBackgroundColor(context.getResources().getColor(R.color.m_color4));
                } else if (data.getPlayerName().equalsIgnoreCase(playerName) && data.getPlayerId().equals(playerId)) {
                    convertView.setBackgroundColor(context.getResources().getColor(R.color.m_gray));
                }
            }

        } catch (NullPointerException e) {
            LogUtils.error(SDKConstant.TAG, "Exception", e);
        } catch (Exception e) {
            LogUtils.error(SDKConstant.TAG, "Exception", e);
        }

        return convertView;
    }

    public static class ViewHolder {
        public transient TextView tvRank;
        public transient TextView tvPlayer;
        public transient TextView tvPlayerAvg;
        public transient ImageView imageView;
    }
}
